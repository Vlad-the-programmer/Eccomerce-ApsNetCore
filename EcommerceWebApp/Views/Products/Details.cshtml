@model EcommerceWebApp.Models.Dtos.ProductDTO

@{
    @using EcommerceWebApp.Helpers;
    @using EcommerceWebApp.ApiServices;
    @using EcommerceWebApp.AppGlobals;
    @inject IApiService apiService;

    ViewData["Title"] = "Product Details";
    var reviewEditDeleteEndpontBase = $"{AppConstants.RESTAPI_BASE_URL}/{GlobalConstants.ReviewsEndpoint}";
}

<div class="container mt-5">
    <div class="card shadow-lg border-0 rounded-4">
        <div class="row g-0">
            <div class="col-md-5 d-flex align-items-center">
                <img src="@AppConstants.RESTAPI_BASE_URL/@Model.Photo" class="img-fluid rounded-start p-3" alt="@Model.Name">
            </div>
            <div class="col-md-7">
                <div class="card-body">
                    <h2 class="card-title text-primary">@Model.Name</h2>
                    <h5 class="text-muted"><strong>Brand:</strong> <span class="fw-bold">@Model.Brand</span></h5>
                    <h4 class="text-success">@Model.Price.ToString("C")</h4>
                    <p class="card-text">@Model.LongAbout</p>
                    <p class="card-text text-muted"><strong>About:</strong> @Model.About</p>
                    <p class="card-text"><strong>Stock:</strong> @Model.Stock.ToString()</p>

                    <div class="d-flex align-items-center">
                        <span class="me-2"><strong>Status:</strong></span>
                        @if (Model.IsActive)
                        {
                            <span class="badge bg-success">AVAILABLE</span>
                        }
                        else
                        {
                            <span class="badge bg-danger">NOT AVAILABLE</span>
                        }
                    </div>

                    <div class="mt-4">
                        <a class="btn btn-outline-secondary me-2" asp-action="Index">Back to List</a>
                        <form asp-controller="Cart" asp-action="AddItemToCart" asp-route-productId="@Model.Id" method="post" style="display:inline;">
                            <button type="submit" class="btn btn-success @(!Model.IsActive ? "disabled" : "") text-white">
                                <i class="bi bi-cart-plus"></i> Add to Cart ($@Model.Price.ToString(".00"))
                            </button>
                        </form>
                    </div>
                    @if (User.Identity.IsAuthenticated && User.IsInRole("Admin"))
                    {
                        <div class="mt-2">
                            <form asp-controller="Products" asp-action="Edit" asp-route-Id="@Model.Id" method="get" style="display:inline;">
                                @Html.AntiForgeryToken()

                                <button class="btn btn-sm btn-outline-primary me-2" type="submit">Edit</button>
                            </form>
                            <a class="btn btn-sm btn-outline-primary me-2 @(!Model.IsActive ? "disabled" : "")" style="display:inline;" asp-controller="Products" asp-action="Delete" asp-route-Id="@Model.Id">
                                Delete
                             </a>
                        </div>
                    }
                </div>
            </div>
            @if (Model.Reviews.Any())
            {
                <div class="mt-5">
                    <h4 class="text-center mb-4">Customer Reviews</h4>
                    @foreach (var review in Model.Reviews)
                    {
                        <div class="card mb-3">
                            <div class="card-body">
                                <h6 class="card-subtitle mb-2 text-muted">
                                    @review.UserName
                                    <span class="text-warning ms-2">
                                        @for (int i = 0; i < review.Rating; i++)
                                        {
                                            <i class="bi bi-star-fill"></i>
                                        }
                                        @for (int i = review.Rating; i < 5; i++)
                                        {
                                            <i class="bi bi-star"></i>
                                        }
                                    </span>
                                </h6>
                                <p class="card-text">@review.ReviewText</p> 

                                @if (User.Identity.IsAuthenticated)
                                {
                                    @if (@ViewBag.CustomerId == @review.CustomerId) 
                                    {
                                        <div class="mt-2">
                                            <button class="btn btn-sm btn-outline-primary me-2 edit-review-btn" data-id="@review.Id" data-endpoint="@($"{reviewEditDeleteEndpontBase}/{review.Id}")">Edit</button>
                                            <button class="btn btn-sm btn-outline-danger delete-review-btn" data-id="@review.Id" data-endpoint="@($"{reviewEditDeleteEndpontBase}/{review.Id}")">Delete</button>
                                        </div>
                                    } 

                                }
                            </div>
                        </div>
                    }

                </div>
            }
            else
            {
                <div class="mt-5 text-center">
                    <p class="text-muted">No reviews yet.</p>
                </div>
            }

            @if (!User.Identity.IsAuthenticated)
            {
                <div class="mt-5 text-center">
                    <a class="btn btn-outline-primary" asp-action="Login" asp-controller="Account">
                        Login to write a review
                    </a>
                </div>
            } else
            {
                
                <div class="mt-4">
                    <button class="btn btn-outline-primary mb-3" type="button" data-bs-toggle="collapse" data-bs-target="#reviewFormCollapse" aria-expanded="false" aria-controls="reviewFormCollapse">
                        <i class="bi bi-pencil-square"></i> Write a Review
                    </button>

                    <div class="collapse" id="reviewFormCollapse">
                        <div class="card card-body border-0 shadow-sm">
                            <form asp-controller="Reviews" asp-action="CreateOrUpdate" method="post" id="reviewForm">
                                @Html.AntiForgeryToken()

                                <input type="hidden" name="ProductId" id="ProductId" value="@Model.Id" />
                                <input type="hidden" name="CustomerId" id="CustomerId" value="@ViewBag.CustomerId" />
                                <input type="hidden" name="Id" id="Id" />
                                <select name="Rating" id="Rating" class="form-select">
                                    <option value="">-- Select Rating --</option>
                                    @for (int i = 1; i <= 5; i++)
                                    {
                                        <option value="@i">@i Star@(i > 1 ? "s" : "")</option>
                                    }
                                </select>
                                <textarea name="ReviewText" id="ReviewText" placeholder="Review" class="form-control" rows="4"></textarea>



                                <div class="text-center">
                                    <button type="submit" class="btn btn-success review-submit-btn">Submit Review</button>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            }


        </div>
    </div>
</div>

@section Scripts {
    <script>
                $(document).ready(function () {
            $('.delete-review-btn').click(function () {
                const endpoint = $(this).data('endpoint');
                const reviewCard = $(this).closest('.card'); // Reference to the whole review card div

                if (confirm("Are you sure you want to delete this review?")) {
                    $.ajax({
                        url: endpoint,
                        method: 'DELETE',
                        success: function () {
                            reviewCard.slideUp(300, function () {
                                $(this).remove(); // Smoothly remove the card from the DOM

                                // Check if any reviews remain
                                if ($('.review-card').length === 0) {
                                    $('.no-reviews-msg').show();
                                    $('#reviewsSection h4').remove(); // remove "Customer Reviews" heading if needed
                                }
                            });
                        },
                        error: function (xhr, status, error) {
                            if (xhr.status === 404) {
                                alert("Review not found.");
                            } else {
                                alert("An error occurred while deleting the review.");
                                console.error("Error:", status, error);
                            }
                        }
                    });
                }
            });
        });


               $(document).ready(function () {
            $('.edit-review-btn').click(function () {
                const endpoint = $(this).data('endpoint');

                $.get(endpoint, function (data) {
                    console.log("Review fetched:", data);

                    // Fill in the form fields BEFORE showing the collapse
                    setTimeout(() => {
                        $('#Id').val(data.id);
                        $('#ProductId').val(data.productId);
                        $('#Rating').val(data.rating);
                        $('#ReviewText').val(data.reviewText);
                        $('.review-submit-btn').text("Update Review");
                    }, 100);


                    // Then show the form
                    const collapseEl = document.getElementById('reviewFormCollapse');
                    const collapse = bootstrap.Collapse.getOrCreateInstance(collapseEl);
                    collapse.show();
                }).fail(function (xhr, status, error) {
                    if (xhr.status === 404) {
                        alert("Review not found.");
                    } else {
                        alert("An error occurred while fetching the review.");
                        console.error("Error:", status, error);
                    }
                });
            });
        });



           $('#reviewForm').submit(function (e) {
            e.preventDefault();

            $.ajax({
                url: $(this).attr('action'),
                method: 'POST',
                data: $(this).serialize(),
                success: function () {
                    const productBaseUrl = '@Url.Action("Details", "Products")';
                    const productId = $('#ProductId').val();
                    window.location.href = `${productBaseUrl}/${productId}`;
                },
                error: function (xhr) {
                    alert("Error: " + xhr.responseText);
                }
            });
        });


                    $('#reviewFormCollapse').on('show.bs.collapse', function () {
                    $('#Id').val('');
                    $('#Rating').val('');
                    $('#ReviewText').val('');
                    $('.review-submit-btn').text("Submit Review");
        });

    </script>
}
